system SYS
instance variables
	static public obj : A := new A(0);
	static public obj2 : A := new A(321);
	
	cpu1:CPU := new CPU(<FP>, 1E7);
	cpu2:CPU := new CPU(<FP>, 1E7);
	
	bus:BUS := new BUS(<CSMACD>, 1E7, {cpu1, cpu2});

operations
	SYS: () ==> SYS
	SYS() ==
	(
		cpu1.deploy(obj, "Test object one");
		cpu2.deploy(obj2, "Test object two");
		
		cpu1.setPriority(A`d100, 10);
		cpu2.setPriority(A`d500, 20);
		-- cpu1.setPriority(A`ThOp, 100);
		-- cpu1.setPriority(A`ThStart, 100);
	);

end SYS

class A
instance variables
	public val:nat := 100;
	
operations
	public A: nat ==> A
	A(n) == val := n;
	
	public Get: () ==> nat
	Get() == duration (100) return val;

	public Get2: A ==> nat
	Get2(x) == duration (200) return x.Get();
	
	public GetNew: () ==> nat
	GetNew() ==
	(
		dcl a:A := new A();
		return a.val;
	);
	
	public Set2: A ==> ()
	Set2(x) ==
	(
		x.Set(123);
		x.Set(456);
	);
	
	public Inc: nat ==> nat
	Inc(n) ==
	(
		dcl old:nat := val;
		Set(Get() + n);
		while (val = old) do
			skip;
		return val
	);
	
	async public Set: nat ==> ()
	Set(n) == val := n;
	
	public both: A ==> nat
	both(x) ==
	(
		x.d500();
		d100();
		return time;
	);
	
	public d100: () ==> ()
	d100() ==
	(
		for i = 1 to 100 do
			duration (10) skip;
	);
	
	async public d500: () ==> ()
	d500() ==
	(
		for i = 1 to 500 do
			duration (2) skip;
	);
	
	private ThOp: () ==> ()
	ThOp() == duration (3) val := val + 1;

	public ThStart: () ==> ()
	ThStart() ==
	(
		start(self);
		while val < 1000 do skip;	-- hang about while ThOp runs 1000 times
	);
		
thread
	periodic (10, 0, 0, 0) (ThOp);
			
end A
